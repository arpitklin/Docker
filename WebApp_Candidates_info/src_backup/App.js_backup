import React, { useState, useEffect } from 'react';

function App() {
  const [name, setName] = useState('');
  const [age, setAge] = useState('');
  const [records, setRecords] = useState([]);

  useEffect(() => {
    // Fetch data from the API when the component mounts
    fetch('https://to-do-list-1808a-default-rtdb.firebaseio.com/Employee.json')
      .then(response => response.json())
      .then(data => {
        // Convert the object of records to an array of record objects
        const recordArray = Object.entries(data).map(([key, value]) => ({ id: key, ...value }));
        setRecords(recordArray);
      });
  }, []);

  const handleAddRecord = async () => {
    try {
      const response = await fetch('https://to-do-list-1808a-default-rtdb.firebaseio.com/Employee.json', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ Name: name, Age: age })
      });

      if (response.ok) {
        // Add the new record to the state
        const newRecordId = await response.json();
        setRecords([...records, { id: newRecordId.name, Name: name, Age: age }]);
        // Clear input fields after successful addition
        setName('');
        setAge('');
        console.log('Record added successfully');
      } else {
        console.error('Failed to add record');
      }
    } catch (error) {
      console.error('Error:', error);
    }
  };

  const handleDeleteRecord = async (id) => {
    try {
      const response = await fetch(`https://to-do-list-1808a-default-rtdb.firebaseio.com/Employee/${id}.json`, {
        method: 'DELETE'
      });

      if (response.ok) {
        // Remove the deleted record from the state
        setRecords(records.filter(record => record.id !== id));
        console.log('Record deleted successfully');
      } else {
        console.error('Failed to delete record');
      }
    } catch (error) {
      console.error('Error:', error);
    }
  };

  return (
    <div>
      <h1>Employee Records</h1>
      <div>
        <div>
          <label htmlFor="name">Name:</label>
          <input
            type="text"
            id="name"
            value={name}
            onChange={(e) => setName(e.target.value)}
          />
        </div>
        <div>
          <label htmlFor="age">Age:</label>
          <input
            type="number"
            id="age"
            value={age}
            onChange={(e) => setAge(e.target.value)}
          />
        </div>
        <button onClick={handleAddRecord}>Add Record</button>
      </div>
      <div>
        {records.map(record => (
          <div key={record.id} style={{ border: '1px solid #ccc', padding: '10px', margin: '10px' }}>
            <h3>{record.Name}</h3>
            <p>Age: {record.Age}</p>
            <button onClick={() => handleDeleteRecord(record.id)}>Delete</button>
          </div>
        ))}
      </div>
    </div>
  );
}

export default App;
